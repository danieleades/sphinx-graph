[tool.poetry]
name = "sphinx-graph"
version = "0.2.0"
description = "'Sphinx-Graph' is a plain-text, VCS-friendly, requirements management tool."
authors = ["Daniel Eades <danieleades@hotmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/danieleades/sphinx-graph"
documentation = "https://sphinx-graph.readthedocs.io/en/latest/index.html"
keywords = ["sphinx, requirements", "documentation", "plain-text"]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Topic :: Documentation",
    "Topic :: Documentation :: Sphinx",
    "Topic :: Utilities",
    "Topic :: Documentation",
    "Topic :: Utilities",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: Sphinx :: Extension",
    "Intended Audience :: Developers",
    "Intended Audience :: Manufacturing",
]


[tool.poetry.dependencies]
python = "^3.8.1"
sphinx = "^6.1.3"
networkx = "^3.0"
toml = "^0.10.2"


[tool.poetry.group.test.dependencies]
# testing
pytest = "^7.2.0"
pytest-cov = "^4.0.0"


[tool.poetry.group.lint.dependencies]
# typing
mypy = "^1.0.1"
types-docutils = "^0.19.1.1"


[tool.poetry.group.doc]
optional = true

[tool.poetry.group.doc.dependencies]
sphinx-rtd-theme = "^1.1.1"



[tool.poetry.group.dev.dependencies]
types-toml = "^0.10.8.5"


[tool.poetry.group.docs.dependencies]
sphinx-autoapi = "^2.0.1"

[tool.mypy]
strict = true
show_error_codes = true
files = "src,tests"
exclude = "tests/roots"
no_implicit_reexport = true

[[tool.mypy.overrides]]
module = ["networkx.*"]
ignore_missing_imports = true


[tool.ruff]
target-version = "py38"
select = [
    "A00",  # flake8-builtins
    "ARG",  # flake8-unused-arguments
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "C901", # function cognitive complexity
    "D",    # pydocstyle
    "E",    # flake8 built-ins
    "EM",   # flake8-errmsg
    "ERA",  # flake8-eradicate
    "F",    # flake8 built-ins
    "FBT",  # boolean trap
    "I001", # isort
    "ISC",  # implicit-str-concat
    "N8",   # pep8-naming
    "PGH",  # pygrep-hooks
    "PIE",  # flake8-pie
    "PLC",  # pylint
    "PLE",  # pylint
    "PLR",  # pylint
    "PLW",  # pylint
    "PT",   # flake8-pytest-style"
    "Q",    # flake8-quotes
    "RET",  # flake8-return
    "RUF",  # Ruff-specific lints
    "S",    # flake8-bandit
    "UP",   # pyupgrade
    "W",    # flake8 built-ins
]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.per-file-ignores]
"tests/*" = ["A001", "A002", "D100", "D103", "D104", "FBT001", "S101"]
"docs/conf.py" = ["A001", "D100"]

[tool.ruff.isort]
known-first-party = ["sphinx_graph"]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
