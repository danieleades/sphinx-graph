[tool.poetry]
name = "sphinx-graph"
version = "0.1.1"
description = "'Sphinx-Graph' is a plain-text, VCS-friendly, requirements management tool."
authors = ["Daniel Eades <danieleades@hotmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/danieleades/sphinx-graph"
documentation = "https://sphinx-graph.readthedocs.io/en/latest/index.html"
keywords = ["sphinx, requirements", "documentation", "plain-text"]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Topic :: Documentation",
    "Topic :: Documentation :: Sphinx",
    "Topic :: Utilities",
    "Topic :: Documentation",
    "Topic :: Utilities",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Framework :: Sphinx :: Extension",
    "Intended Audience :: Developers",
    "Intended Audience :: Manufacturing",
]


[tool.poetry.dependencies]
python = "^3.8.1"
sphinx = "^5.3.0"
networkx = "^2.8.8"


[tool.poetry.group.test.dependencies]
# testing
pytest = "^7.2.0"
pytest-cov = "^4.0.0"


[tool.poetry.group.lint.dependencies]
# typing
mypy = "^0.991"
types-docutils = "^0.19.1.1"

# linting
flake8 = "^6.0.0"
flake8-future-annotations = "^1.0.0"
flake8-simplify = "^0.19.3"
flake8-unused-arguments = "^0.0.12"
flake8-use-fstring = "^1.3"


[tool.poetry.group.doc]
optional = true

[tool.poetry.group.doc.dependencies]
sphinx-rtd-theme = "^1.1.1"


[tool.mypy]
strict = true
show_error_codes = true
files = "src,tests"
exclude = "tests/roots"
no_implicit_reexport = true

[[tool.mypy.overrides]]
module = ["networkx.*"]
ignore_missing_imports = true


[tool.ruff]
select = [
    "I001",   # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "C901",   # function cognitive complexity
    "N",      # pep8-naming
    "PGH003", # Use specific error codes when ignoring type issues
    "PGH004", # Use specific error codes when using 'noqa'
]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.per-file-ignores]
"tests/*" = [
    'D100',
    'D103',
    'D104',
]
"docs/conf.py" = ['D100']

[tool.ruff.isort]
known-first-party = ["sphinx_graph"]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
